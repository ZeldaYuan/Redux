{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/Pixabay/2112/src/Pages/Search.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Picture from './Picture';\nimport SearchInputForm from './SearchInputForm';\nimport { search } from '../actions/searchActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchContainer = props => {\n  /*const searchStatus = useSelector(state => state.status.search);\n  const searchError = useSelector(state => state.status.searchError);\n  const dispatch = useDispatch();\n  const result = useSelector(state =>state.search);*/\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchInputForm, {\n      placeholder: \"Search Pictures...\",\n      onSubmit: searchtitle => props.search(searchtitle) //onSubmit={ (searchtitle) => dispatch(search(searchtitle)) }\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), searchStatus === 'SUCCESS' ? /*#__PURE__*/_jsxDEV(Picture, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : null, searchStatus === 'PENDING' ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../../images/loading.gif\",\n        alt: \"On loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : null, searchStatus === 'ERROR' ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"red exclamation triangle icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), searchError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n\n_c = SearchContainer;\n\nconst mapStateToProps = state => ({\n  searchStatus: state.status.search,\n  searchError: state.status.searchError,\n  result: state.search,\n  favoriteInfo: state.favorites[state.search.imdbID]\n});\n\nconst mapDispatchToProps = dispatch => ({\n  search(title) {\n    dispatch(search(title));\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchContainer\");","map":{"version":3,"sources":["/Users/Zelda/Redux/Pixabay/2112/src/Pages/Search.js"],"names":["React","useSelector","useDispatch","Picture","SearchInputForm","search","connect","SearchContainer","props","searchtitle","searchStatus","searchError","mapStateToProps","state","status","result","favoriteInfo","favorites","imdbID","mapDispatchToProps","dispatch","title","Search"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,MAAR,QAAqB,0BAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAEjC;AACF;AACA;AACA;AAGE,sBACA;AAAM,IAAA,EAAE,EAAC,kBAAT;AAAA,4BACE,QAAC,eAAD;AACE,MAAA,WAAW,EAAC,oBADd;AAEE,MAAA,QAAQ,EAAIC,WAAD,IAAiBD,KAAK,CAACH,MAAN,CAAaI,WAAb,CAF9B,CAGE;;AAHF;AAAA;AAAA;AAAA;AAAA,YADF,EAOKC,YAAY,KAAK,SAAlB,gBACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,GAGE,IAVN,EAaKA,YAAY,KAAK,SAAlB,gBACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAC,0BAAT;AAAoC,QAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,GAIE,IAjBN,EAoBKA,YAAY,KAAK,OAAlB,gBACE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,EAEIC,WAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,GAOE,IA3BN;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAgCD,CAxCD;;KAAMJ,e;;AAyCN,MAAMK,eAAe,GAAIC,KAAD,KACtB;AACEH,EAAAA,YAAY,EAAEG,KAAK,CAACC,MAAN,CAAaT,MAD7B;AAEEM,EAAAA,WAAW,EAAEE,KAAK,CAACC,MAAN,CAAaH,WAF5B;AAGEI,EAAAA,MAAM,EAAEF,KAAK,CAACR,MAHhB;AAIEW,EAAAA,YAAY,EAAEH,KAAK,CAACI,SAAN,CAAgBJ,KAAK,CAACR,MAAN,CAAaa,MAA7B;AAJhB,CADsB,CAAxB;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,KACzB;AACEf,EAAAA,MAAM,CAACgB,KAAD,EAAQ;AACZD,IAAAA,QAAQ,CAACf,MAAM,CAACgB,KAAD,CAAP,CAAR;AACD;;AAHH,CADyB,CAA3B;;AAQA,eAAef,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CG,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch} from 'react-redux';\nimport Picture from './Picture';\nimport SearchInputForm from './SearchInputForm';\nimport {search} from '../actions/searchActions';\nimport { connect } from 'react-redux';\n\nconst SearchContainer = (props) => {\n\n  /*const searchStatus = useSelector(state => state.status.search);\n  const searchError = useSelector(state => state.status.searchError);\n  const dispatch = useDispatch();\n  const result = useSelector(state =>state.search);*/\n\n\n  return(\n  <main id='search-container'>\n    <SearchInputForm\n      placeholder='Search Pictures...'\n      onSubmit={ (searchtitle) => props.search(searchtitle) }\n      //onSubmit={ (searchtitle) => dispatch(search(searchtitle)) }\n    />\n    {\n      (searchStatus === 'SUCCESS')\n      ? <Picture\n        />\n      : null\n    }\n    {\n      (searchStatus === 'PENDING')\n      ? <section className='loading'>\n          <img src='../../images/loading.gif' alt=\"On loading\"/>\n        </section>\n      : null\n    }\n    {\n      (searchStatus === 'ERROR')\n      ? <section className='error'>\n          <p className='error'>\n            <i className=\"red exclamation triangle icon\"></i>\n            { searchError }\n          </p>\n        </section>\n      : null\n    }\n  </main>\n)\n};\nconst mapStateToProps = (state) => (\n  {\n    searchStatus: state.status.search,\n    searchError: state.status.searchError,\n    result: state.search,\n    favoriteInfo: state.favorites[state.search.imdbID],\n  }\n);\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    search(title) {\n      dispatch(search(title))\n    }\n  }\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}