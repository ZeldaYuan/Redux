{"ast":null,"code":"import apiClient from '../apiClient';\nimport { SEARCH_REQUEST, SEARCH_SUCCESS, SEARCH_FAILURE } from './actionTypes';\nexport const searchRequest = () => ({\n  type: 'SEARCH_REQUEST'\n});\nexport const searchSuccess = result => ({\n  type: 'SEARCH_SUCCESS',\n  result\n});\nexport const searchFailure = error => ({\n  type: 'SEARCH_FAILURE',\n  error\n});\nexport default function search(title) {\n  return dispatch => {\n    dispatch(searchRequest());\n    apiClient.query(title).then(response => {\n      dispatch(searchSuccess(response.data));\n    }).catch(error => {\n      dispatch(searchFailure(error.response.data));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/Zelda/Redux/Pixabay/2112/src/actions/searchActions.js"],"names":["apiClient","SEARCH_REQUEST","SEARCH_SUCCESS","SEARCH_FAILURE","searchRequest","type","searchSuccess","result","searchFailure","error","search","title","dispatch","query","then","response","data","catch"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAAQC,cAAR,EAAuBC,cAAvB,EAAsCC,cAAtC,QAA2D,eAA3D;AAEA,OAAO,MAAMC,aAAa,GAAG,OAAO;AAClCC,EAAAA,IAAI,EAAE;AAD4B,CAAP,CAAtB;AAIP,OAAO,MAAMC,aAAa,GAAIC,MAAD,KAAa;AACxCF,EAAAA,IAAI,EAAE,gBADkC;AAChBE,EAAAA;AADgB,CAAb,CAAtB;AAIP,OAAO,MAAMC,aAAa,GAAIC,KAAD,KAAY;AACvCJ,EAAAA,IAAI,EAAE,gBADiC;AACfI,EAAAA;AADe,CAAZ,CAAtB;AAIP,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AACnC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AAEAJ,IAAAA,SAAS,CAACa,KAAV,CAAgBF,KAAhB,EACGG,IADH,CACQC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAACN,aAAa,CAACS,QAAQ,CAACC,IAAV,CAAd,CAAR;AACD,KAHH,EAIGC,KAJH,CAISR,KAAK,IAAI;AACdG,MAAAA,QAAQ,CAACJ,aAAa,CAACC,KAAK,CAACM,QAAN,CAAeC,IAAhB,CAAd,CAAR;AACD,KANH;AAOD,GAVD;AAWD","sourcesContent":["import apiClient from '../apiClient';\nimport {SEARCH_REQUEST,SEARCH_SUCCESS,SEARCH_FAILURE} from './actionTypes'\n\nexport const searchRequest = () => ({\n  type: 'SEARCH_REQUEST'\n});\n\nexport const searchSuccess = (result) => ({\n  type: 'SEARCH_SUCCESS', result\n});\n\nexport const searchFailure = (error) => ({\n  type: 'SEARCH_FAILURE', error\n});\n\nexport default function search(title){\n  return (dispatch) => {\n    dispatch(searchRequest());\n\n    apiClient.query(title)\n      .then(response => {\n        dispatch(searchSuccess(response.data))\n      })\n      .catch(error => {\n        dispatch(searchFailure(error.response.data))\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}