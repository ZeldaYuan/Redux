{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/Pixabay/2112/src/Pages/Search.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Pictures from './Pictures';\nimport SearchInputForm from './SearchInputForm';\nimport { searchSuccess } from '../actions/searchActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => /*#__PURE__*/_jsxDEV(\"main\", {\n  id: \"search-container\",\n  children: [/*#__PURE__*/_jsxDEV(SearchInputForm, {\n    placeholder: \"Search Pictures...\",\n    onSubmit: title => props.search(title)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), props.searchStatus === 'SUCCESS' ? /*#__PURE__*/_jsxDEV(Pictures, {\n    picture: props.favoriteInfo ? props.favoriteInfo : props.result,\n    isFavorite: !!props.favoriteInfo,\n    handleFavoriteButtonClicked: props.handleFavoriteButtonClicked,\n    editable: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this) : null, props.searchStatus === 'PENDING' ? /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"loading\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../../images/loading.gif\",\n      alt: \"On loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this) : null, props.searchStatus === 'ERROR' ? /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"error\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"red exclamation triangle icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), props.searchError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this) : null]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c = Search;\n\nconst mapStateToProps = state => ({\n  searchStatus: state.status.searchSuccess,\n  searchError: state.status.searchError,\n  result: state.searchSuccess,\n  favoriteInfo: state.favorites[state.searchSuccess.imdbID]\n});\n\nconst mapDispatchToProps = dispatch => ({\n  searchSuccess(title) {\n    dispatch(searchSuccess(title));\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/Zelda/Redux/Pixabay/2112/src/Pages/Search.js"],"names":["React","connect","Pictures","SearchInputForm","searchSuccess","Search","props","title","search","searchStatus","favoriteInfo","result","handleFavoriteButtonClicked","searchError","mapStateToProps","state","status","favorites","imdbID","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,aAAT,QAA+B,0BAA/B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBACb;AAAM,EAAA,EAAE,EAAC,kBAAT;AAAA,0BACE,QAAC,eAAD;AACE,IAAA,WAAW,EAAC,oBADd;AAEE,IAAA,QAAQ,EAAIC,KAAD,IAAWD,KAAK,CAACE,MAAN,CAAaD,KAAb;AAFxB;AAAA;AAAA;AAAA;AAAA,UADF,EAOKD,KAAK,CAACG,YAAN,KAAuB,SAAxB,gBACE,QAAC,QAAD;AACE,IAAA,OAAO,EAAGH,KAAK,CAACI,YAAN,GAAqBJ,KAAK,CAACI,YAA3B,GAA0CJ,KAAK,CAACK,MAD5D;AAEE,IAAA,UAAU,EAAG,CAAC,CAACL,KAAK,CAACI,YAFvB;AAGE,IAAA,2BAA2B,EAAGJ,KAAK,CAACM,2BAHtC;AAIE,IAAA,QAAQ,EAAG;AAJb;AAAA;AAAA;AAAA;AAAA,UADF,GAOE,IAdN,EAiBKN,KAAK,CAACG,YAAN,KAAuB,SAAxB,gBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA,2BACE;AAAK,MAAA,GAAG,EAAC,0BAAT;AAAoC,MAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,GAIE,IArBN,EAwBKH,KAAK,CAACG,YAAN,KAAuB,OAAxB,gBACE;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,EAEIH,KAAK,CAACO,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,GAOE,IA/BN;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMR,M;;AAsCN,MAAMS,eAAe,GAAIC,KAAD,KACtB;AACEN,EAAAA,YAAY,EAAEM,KAAK,CAACC,MAAN,CAAaZ,aAD7B;AAEES,EAAAA,WAAW,EAAEE,KAAK,CAACC,MAAN,CAAaH,WAF5B;AAGEF,EAAAA,MAAM,EAAEI,KAAK,CAACX,aAHhB;AAIEM,EAAAA,YAAY,EAAEK,KAAK,CAACE,SAAN,CAAgBF,KAAK,CAACX,aAAN,CAAqBc,MAArC;AAJhB,CADsB,CAAxB;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,KACzB;AACEhB,EAAAA,aAAa,CAAEG,KAAF,EAAS;AACpBa,IAAAA,QAAQ,CAAChB,aAAa,CAAEG,KAAF,CAAd,CAAR;AACD;;AAHH,CADyB,CAA3B;;AAQA,eAAeN,OAAO,CAACa,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cd,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Pictures from './Pictures';\nimport SearchInputForm from './SearchInputForm';\nimport { searchSuccess  } from '../actions/searchActions';\n\nconst Search = (props) => (\n  <main id='search-container'>\n    <SearchInputForm\n      placeholder='Search Pictures...'\n      onSubmit={ (title) => props.search(title) }\n\n    />\n    {\n      (props.searchStatus === 'SUCCESS')\n      ? <Pictures\n          picture={ props.favoriteInfo ? props.favoriteInfo : props.result }\n          isFavorite={ !!props.favoriteInfo }\n          handleFavoriteButtonClicked={ props.handleFavoriteButtonClicked }\n          editable={ false }\n        />\n      : null\n    }\n    {\n      (props.searchStatus === 'PENDING')\n      ? <section className='loading'>\n          <img src='../../images/loading.gif' alt=\"On loading\"/>\n        </section>\n      : null\n    }\n    {\n      (props.searchStatus === 'ERROR')\n      ? <section className='error'>\n          <p className='error'>\n            <i className=\"red exclamation triangle icon\"></i>\n            { props.searchError }\n          </p>\n        </section>\n      : null\n    }\n  </main>\n);\n\n\nconst mapStateToProps = (state) => (\n  {\n    searchStatus: state.status.searchSuccess ,\n    searchError: state.status.searchError,\n    result: state.searchSuccess ,\n    favoriteInfo: state.favorites[state.searchSuccess .imdbID],\n  }\n);\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    searchSuccess (title) {\n      dispatch(searchSuccess (title))\n    }\n  }\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}