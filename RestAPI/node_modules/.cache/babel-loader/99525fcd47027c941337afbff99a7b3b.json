{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/Pixabay/2112/src/Pages/Picture.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Picture(_ref) {\n  _s();\n\n  let {\n    pictures\n  } = _ref;\n  const [currentItems, setCurrentItems] = useState([]); //  const [totalPages,setTotalPages] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  const itemPerPage = 4;\n  /*getPageCount = (total,denominator)=>{\n    const divisible =0 ===total % denominator;\n    const valueTobeAdd = divisible ? 0:1;\n    return Math.floor(x:total/denominator)+valueTobeAdd;\n  }*/\n\n  useEffect(() => {\n    const endOffset = itemOffset + itemPerPage;\n    setCurrentItems(pictures.data.hits.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(pictures.data.total / itemPerPage));\n  }, [itemOffset, itemPerPage, pictures]);\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemPerPage % pictures.data.total;\n    setItemOffset(newOffset);\n  };\n\n  if (Object.keys(pictures).length && pictures.data.hits) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pictures-container\",\n        children: currentItems.map(picture => {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            href: picture.previewURL,\n            className: \"picture\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: picture.previewURL,\n                alt: `${picture.user} image`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 9\n            }, this)\n          }, picture.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 3,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        renderOnZeroPageCount: null,\n        containerClassName: \"pagination\",\n        pageLinkClassName: \"page-num\",\n        previousLinkClassName: \"page-num\",\n        nextLinkClassName: \"page-num\",\n        activeLinkClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true);\n  }\n} //export default Picture;\n\n_s(Picture, \"eoEComF4p21MnWGI7luaSPlm/1Y=\");\n\n_c = Picture;\n\nvar _c;\n\n$RefreshReg$(_c, \"Picture\");","map":{"version":3,"sources":["/Users/Zelda/Redux/Pixabay/2112/src/Pages/Picture.js"],"names":["React","useState","useEffect","ReactPaginate","Picture","pictures","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","itemPerPage","endOffset","data","hits","slice","Math","ceil","total","handlePageClick","event","newOffset","selected","Object","keys","length","map","picture","previewURL","user","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,eAAe,SAASC,OAAT,OAA+B;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC5C,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCN,QAAQ,CAAC,EAAD,CAA/C,CAD4C,CAE9C;;AACE,QAAM,CAACO,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAACS,UAAD,EAAYC,aAAZ,IAA6BV,QAAQ,CAAC,CAAD,CAA3C;AAGA,QAAMW,WAAW,GAAG,CAApB;AAEA;AACF;AACA;AACA;AACA;;AAEEV,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMW,SAAS,GAAGH,UAAU,GAAGE,WAA/B;AACAL,IAAAA,eAAe,CAACF,QAAQ,CAACS,IAAT,CAAcC,IAAd,CAAmBC,KAAnB,CAAyBN,UAAzB,EAAoCG,SAApC,CAAD,CAAf;AACAJ,IAAAA,YAAY,CAACQ,IAAI,CAACC,IAAL,CAAUb,QAAQ,CAACS,IAAT,CAAcK,KAAd,GAAsBP,WAAhC,CAAD,CAAZ;AACD,GAJQ,EAIP,CAACF,UAAD,EAAYE,WAAZ,EAAwBP,QAAxB,CAJO,CAAT;;AAMA,QAAMe,eAAe,GAAIC,KAAD,IAAS;AAC/B,UAAMC,SAAS,GAAID,KAAK,CAACE,QAAN,GAAgBX,WAAjB,GAA+BP,QAAQ,CAACS,IAAT,CAAcK,KAA/D;AACAR,IAAAA,aAAa,CAACW,SAAD,CAAb;AACD,GAHD;;AAKD,MAAIE,MAAM,CAACC,IAAP,CAAYpB,QAAZ,EAAsBqB,MAAtB,IAAgCrB,QAAQ,CAACS,IAAT,CAAcC,IAAlD,EAAuD;AACtD,wBACE;AAAA,8BACD;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACET,YAAY,CAACqB,GAAb,CAAiBC,OAAO,IAAE;AACzB,8BACE;AAAoB,YAAA,IAAI,EAAEA,OAAO,CAACC,UAAlC;AAA8C,YAAA,SAAS,EAAC,SAAxD;AAAA,mCACA;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,OAAf;AAAuB,gBAAA,GAAG,EAAED,OAAO,CAACC,UAApC;AAAgD,gBAAA,GAAG,EAAG,GAAED,OAAO,CAACE,IAAK;AAArE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,aAAQF,OAAO,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,kBADF;AAOA,SARD;AADF;AAAA;AAAA;AAAA;AAAA,cADC,eAaD,QAAC,aAAD;AACC,QAAA,UAAU,EAAC,KADZ;AAEC,QAAA,SAAS,EAAC,QAFX;AAGC,QAAA,YAAY,EAAEX,eAHf;AAIC,QAAA,kBAAkB,EAAE,CAJrB;AAKC,QAAA,SAAS,EAAEZ,SALZ;AAMC,QAAA,aAAa,EAAC,YANf;AAOC,QAAA,qBAAqB,EAAE,IAPxB;AAQC,QAAA,kBAAkB,EAAC,YARpB;AASC,QAAA,iBAAiB,EAAC,UATnB;AAUC,QAAA,qBAAqB,EAAC,UAVvB;AAWC,QAAA,iBAAiB,EAAC,UAXnB;AAYC,QAAA,mBAAmB,EAAC;AAZrB;AAAA;AAAA;AAAA;AAAA,cAbC;AAAA,oBADF;AA8BA;AACD,C,CACD;;GA3DwBJ,O;;KAAAA,O","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport ReactPaginate from \"react-paginate\";\n\nexport default function Picture( {pictures} ) {\n  const [currentItems,setCurrentItems] = useState([]);\n//  const [totalPages,setTotalPages] = useState(0);\n  const [pageCount,setPageCount] = useState(0);\n  const [itemOffset,setItemOffset] = useState(0);\n\n\n  const itemPerPage = 4;\n\n  /*getPageCount = (total,denominator)=>{\n    const divisible =0 ===total % denominator;\n    const valueTobeAdd = divisible ? 0:1;\n    return Math.floor(x:total/denominator)+valueTobeAdd;\n  }*/\n\n  useEffect(()=>{\n    const endOffset = itemOffset + itemPerPage;\n    setCurrentItems(pictures.data.hits.slice(itemOffset,endOffset));\n    setPageCount(Math.ceil(pictures.data.total / itemPerPage));\n  },[itemOffset,itemPerPage,pictures]);\n\n  const handlePageClick = (event)=>{\n    const newOffset = (event.selected* itemPerPage)% pictures.data.total;\n    setItemOffset(newOffset);\n  }\n\n if (Object.keys(pictures).length && pictures.data.hits){\n  return(\n    <>\n   <div className=\"pictures-container\">\n    {currentItems.map(picture=>{\n      return(\n        <a key={picture.id} href={picture.previewURL} className=\"picture\">\n        <div className=\"image-wrapper\">\n          <img className=\"image\" src={picture.previewURL} alt={`${picture.user} image`}/>\n        </div>\n        </a>\n     )\n     })\n    }\n   </div>\n   <ReactPaginate\n    breakLabel=\"...\"\n    nextLabel=\"next >\"\n    onPageChange={handlePageClick}\n    pageRangeDisplayed={3}\n    pageCount={pageCount}\n    previousLabel=\"< previous\"\n    renderOnZeroPageCount={null}\n    containerClassName=\"pagination\"\n    pageLinkClassName='page-num'\n    previousLinkClassName=\"page-num\"\n    nextLinkClassName=\"page-num\"\n    activeLinkClassName=\"active\"\n    />\n    </>\n  )\n }\n}\n//export default Picture;\n"]},"metadata":{},"sourceType":"module"}