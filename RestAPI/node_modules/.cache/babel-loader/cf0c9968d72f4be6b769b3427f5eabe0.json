{"ast":null,"code":"import axios from 'axios';\nvar API_KEY = '14204379-7d3ac6eed48661065b4c023bb';\n\nconst SEARCH_URL = searchtitle => \"https://pixabay.com/api/?key=\" + API_KEY + \"&q=\" + searchtitle;\n\n_c = SEARCH_URL;\nconst COLLECTS_URL = '/api/collects';\n\nconst COLLECT_URL = imdbID => '/api/collects/' + imdbID;\n\n_c2 = COLLECT_URL;\nconst apiClient = {\n  query(searchtitle) {\n    searchtitle = encodeURIComponent(searchtitle);\n\n    if (searchtitle.trim().length === 0) {\n      let searchtitle = '';\n      let res = {};\n    } else {\n      const res = axios.get(SEARCH_URL(searchtitle));\n      console.log(res);\n      return res;\n    }\n  },\n\n  saveCollect(movie) {\n    return axios.post(COLLECTS_URL, movie);\n  },\n\n  getAllCollects() {\n    return axios.get(COLLECTS_URL);\n  },\n\n  deleteCollect(imdbID) {\n    return axios.delete(COLLECT_URL(imdbID));\n  }\n\n};\nwindow.apiClient = apiClient;\nwindow.axios = axios;\nexport default apiClient;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SEARCH_URL\");\n$RefreshReg$(_c2, \"COLLECT_URL\");","map":{"version":3,"sources":["/Users/Zelda/Redux/Pixabay/2112/src/apiClient.js"],"names":["axios","API_KEY","SEARCH_URL","searchtitle","COLLECTS_URL","COLLECT_URL","imdbID","apiClient","query","encodeURIComponent","trim","length","res","get","console","log","saveCollect","movie","post","getAllCollects","deleteCollect","delete","window"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,OAAO,GAAG,oCAAd;;AACA,MAAMC,UAAU,GAAIC,WAAD,IAAe,kCAAgCF,OAAhC,GAAwC,KAAxC,GAAgDE,WAAlF;;KAAMD,U;AACN,MAAME,YAAY,GAAG,eAArB;;AACA,MAAMC,WAAW,GAAIC,MAAD,IAAY,mBAAmBA,MAAnD;;MAAMD,W;AAEL,MAAME,SAAS,GAAG;AAChBC,EAAAA,KAAK,CAACL,WAAD,EAAc;AAClBA,IAAAA,WAAW,GAAGM,kBAAkB,CAACN,WAAD,CAAhC;;AACE,QAAIA,WAAW,CAACO,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAoC;AACnC,UAAIR,WAAW,GAAC,EAAhB;AACA,UAAIS,GAAG,GAAC,EAAR;AACA,KAHD,MAIA;AACA,YAAMA,GAAG,GAAGZ,KAAK,CAACa,GAAN,CAAUX,UAAU,CAACC,WAAD,CAApB,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,aAAOA,GAAP;AACA;AACH,GAZgB;;AAajBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,WAAOjB,KAAK,CAACkB,IAAN,CAAWd,YAAX,EAAyBa,KAAzB,CAAP;AACD,GAfgB;;AAiBjBE,EAAAA,cAAc,GAAG;AACf,WAAOnB,KAAK,CAACa,GAAN,CAAUT,YAAV,CAAP;AACD,GAnBgB;;AAqBjBgB,EAAAA,aAAa,CAACd,MAAD,EAAS;AACpB,WAAON,KAAK,CAACqB,MAAN,CAAahB,WAAW,CAACC,MAAD,CAAxB,CAAP;AACD;;AAvBgB,CAAlB;AA0BDgB,MAAM,CAACf,SAAP,GAAmBA,SAAnB;AACAe,MAAM,CAACtB,KAAP,GAAeA,KAAf;AAEA,eAAeO,SAAf","sourcesContent":["import axios from 'axios';\n\nvar API_KEY = '14204379-7d3ac6eed48661065b4c023bb';\nconst SEARCH_URL = (searchtitle)=>\"https://pixabay.com/api/?key=\"+API_KEY+\"&q=\" + searchtitle;\nconst COLLECTS_URL = '/api/collects';\nconst COLLECT_URL = (imdbID) => '/api/collects/' + imdbID;\n\n const apiClient = {\n   query(searchtitle) {\n    searchtitle = encodeURIComponent(searchtitle);\n      if (searchtitle.trim().length === 0){\n       let searchtitle='';\n       let res={};\n      }else\n      {\n      const res = axios.get(SEARCH_URL(searchtitle));\n      console.log(res);\n      return res\n     }\n  },\n  saveCollect(movie) {\n    return axios.post(COLLECTS_URL, movie);\n  },\n\n  getAllCollects() {\n    return axios.get(COLLECTS_URL);\n  },\n\n  deleteCollect(imdbID) {\n    return axios.delete(COLLECT_URL(imdbID));\n  },\n}\n\nwindow.apiClient = apiClient;\nwindow.axios = axios;\n\nexport default apiClient;\n"]},"metadata":{},"sourceType":"module"}