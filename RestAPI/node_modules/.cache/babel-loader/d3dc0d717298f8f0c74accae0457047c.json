{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/Pixabay/2112/src/Pages/SearchInputForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchInputForm = _ref => {\n  _s();\n\n  var _errors$title;\n\n  let {\n    search\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [searchtitle, setSearchtitle] = useState(''); //const [errors,setErrors] = useState({});\n\n  const inputChange = event => {\n    const title = event.target.value;\n    setSearchtitle(title);\n    console.log(title);\n  };\n\n  const onSubmit = event => {\n    //\n    event.preventDefault();\n    setErrors(validate(searchtitle));\n    setSearchtitle(\" \");\n  };\n\n  const validate = value => {\n    const errors = {};\n    if (value.trim().length === 0) return 'Title is required!';\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\" //className={ this.state.error ? 'error' : '' }\n        ,\n        name: \"title\",\n        type: \"text\",\n        value: searchtitle,\n        placeholder: \"Search Pictures...\",\n        ref: register({\n          required: 'Title is required'\n        }),\n        onChange: inputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [(_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"search icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchInputForm, \"auskj9efZz7gUYJ/FDgXIOkqB0o=\", false, function () {\n  return [useForm];\n});\n\n_c = SearchInputForm;\nexport default SearchInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInputForm\");","map":{"version":3,"sources":["/Users/Zelda/Redux/Pixabay/2112/src/Pages/SearchInputForm.js"],"names":["React","useState","useForm","SearchInputForm","search","register","handleSubmit","errors","searchtitle","setSearchtitle","inputChange","event","title","target","value","console","log","onSubmit","preventDefault","setErrors","validate","trim","length","required","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;;AAEA,MAAMC,eAAe,GAAG,QAAc;AAAA;;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAClC,QAAM;AAACC,IAAAA,QAAD;AAAUC,IAAAA,YAAV;AAAuBC,IAAAA;AAAvB,MAA+BL,OAAO,EAA5C;AACA,QAAM,CAACM,WAAD,EAAaC,cAAb,IAA+BR,QAAQ,CAAC,EAAD,CAA7C,CAFkC,CAGlC;;AAEA,QAAMS,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAMC,KAAK,GAAID,KAAK,CAACE,MAAN,CAAaC,KAA5B;AACAL,IAAAA,cAAc,CAACG,KAAD,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,GAJD;;AAMD,QAAMK,QAAQ,GAAIN,KAAD,IAAW;AAAG;AAC9BA,IAAAA,KAAK,CAACO,cAAN;AACAC,IAAAA,SAAS,CAACC,QAAQ,CAACZ,WAAD,CAAT,CAAT;AAEAC,IAAAA,cAAc,CAAC,GAAD,CAAd;AACD,GALA;;AAMC,QAAMW,QAAQ,GAAIN,KAAD,IAAW;AAC3B,UAAMP,MAAM,GAAG,EAAf;AACA,QAAIO,KAAK,CAACO,IAAN,GAAaC,MAAb,KAAwB,CAA5B,EAA+B,OAAO,oBAAP;AAChC,WAAOf,MAAP;AACG,GAJH;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACA;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,QAAQ,EAAED,YAAY,CAACW,QAAD,CAA/C;AAAA,8BACA;AACM,QAAA,EAAE,EAAC,OADT,CAEM;AAFN;AAGM,QAAA,IAAI,EAAC,OAHX;AAIM,QAAA,IAAI,EAAC,MAJX;AAKM,QAAA,KAAK,EAAET,WALb;AAMM,QAAA,WAAW,EAAC,oBANlB;AAOM,QAAA,GAAG,EAAIH,QAAQ,CAAC;AAACkB,UAAAA,QAAQ,EAAC;AAAV,SAAD,CAPrB;AAQM,QAAA,QAAQ,EAAEb;AARhB;AAAA;AAAA;AAAA;AAAA,cADA,eAWM;AAAA,oCAAIH,MAAM,CAACK,KAAX,kDAAI,cAAcY,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXN,eAYI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA5CH;;GAAMrB,e;UACmCD,O;;;KADnCC,e;AA8CN,eAAeA,eAAf","sourcesContent":["import React,{useState} from 'react';\nimport {useForm} from 'react-hook-form';\n\nconst SearchInputForm = ({search})=>  {\n    const {register,handleSubmit,errors}=useForm();\n    const [searchtitle,setSearchtitle] = useState('');\n    //const [errors,setErrors] = useState({});\n\n    const inputChange = (event) => {\n      const title  = event.target.value;\n      setSearchtitle(title);\n      console.log(title);\n    }\n\n   const onSubmit = (event) => {  //\n    event.preventDefault();\n    setErrors(validate(searchtitle));\n\n    setSearchtitle(\" \");\n  }\n    const validate = (value) => {\n     const errors = {};\n     if (value.trim().length === 0) return 'Title is required!';\n    return errors;\n      }\n\n    return (\n      <div className='flex'>\n      <form className='search' onSubmit={handleSubmit(onSubmit)}>\n      <input\n            id='title'\n            //className={ this.state.error ? 'error' : '' }\n            name='title'\n            type='text'\n            value={searchtitle}\n            placeholder='Search Pictures...'\n            ref = {register({required:'Title is required'})}\n            onChange={inputChange}\n          />\n            <p>{errors.title?.message} </p>\n          <button type='submit'>\n            <i className='search icon'></i>\n          </button>\n      </form>\n      </div>\n\n    )\n  }\n\nexport default SearchInputForm;\n"]},"metadata":{},"sourceType":"module"}