{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/Pixabay/2112/src/Pages/SearchInputForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchInputForm = _ref => {\n  _s();\n\n  var _error$title;\n\n  let {\n    search\n  } = _ref;\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [searchtitle, setSearchtitle] = useState('');\n  const [errors, setErrors] = useState({});\n  /*const inputChange = (event) => {\n    const title  = event.target.value;\n    setSearchtitle(title);\n    console.log(title);\n  }*/\n\n  /* const onSubmit = (data) => {  //\n    //event.preventDefault();\n  //  setErrors(validate(searchtitle));\n    setSearchtitle(data);\n    console.log(data)\n  }*/\n\n  const onFormSubmit = event => {\n    //\n    event.preventDefault();\n    setErrors(validate(searchtitle));\n    search(searchtitle);\n    console.log(searchtitle);\n  };\n\n  const validate = value => {\n    const errors = {};\n    if (value.trim().length === 0) return 'Title is required!';\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringfy(searchtitle, undefined, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\" //className={ this.state.error ? 'error' : '' }\n        ,\n        name: \"title\",\n        type: \"text\",\n        value: searchtitle,\n        placeholder: \"Search Pictures...\",\n        ref: register({\n          required: 'Title is required'\n        }),\n        onChange: inputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [(_error$title = error.title) === null || _error$title === void 0 ? void 0 : _error$title.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"search icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchInputForm, \"2i9CqK9uCSTLbCdSvB8kELGAlLc=\", false, function () {\n  return [useForm];\n});\n\n_c = SearchInputForm;\nexport default SearchInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInputForm\");","map":{"version":3,"sources":["/Users/Zelda/Redux/Pixabay/2112/src/Pages/SearchInputForm.js"],"names":["React","useState","useForm","SearchInputForm","search","register","handleSubmit","searchtitle","setSearchtitle","errors","setErrors","onFormSubmit","event","preventDefault","validate","console","log","value","trim","length","JSON","stringfy","undefined","onSubmit","required","inputChange","error","title","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;;AAEA,MAAMC,eAAe,GAAG,QAAc;AAAA;;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAClC,QAAM;AAACC,IAAAA,QAAD;AAAUC,IAAAA;AAAV,MAAwBJ,OAAO,EAArC;AACA,QAAM,CAACK,WAAD,EAAaC,cAAb,IAA+BP,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACQ,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AAEA;AACJ;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;;AAEE,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAAG;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,SAAS,CAACI,QAAQ,CAACP,WAAD,CAAT,CAAT;AACAH,IAAAA,MAAM,CAACG,WAAD,CAAN;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACD,GALA;;AAME,QAAMO,QAAQ,GAAIG,KAAD,IAAW;AAC3B,UAAMR,MAAM,GAAG,EAAf;AACA,QAAIQ,KAAK,CAACC,IAAN,GAAaC,MAAb,KAAwB,CAA5B,EAA+B,OAAO,oBAAP;AAChC,WAAOV,MAAP;AACD,GAJC;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACA;AAAA,gBAAMW,IAAI,CAACC,QAAL,CAAcd,WAAd,EAA0Be,SAA1B,EAAoC,CAApC;AAAN;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,QAAQ,EAAEhB,YAAY,CAACiB,QAAD,CAA/C;AAAA,8BACA;AACM,QAAA,EAAE,EAAC,OADT,CAEM;AAFN;AAGM,QAAA,IAAI,EAAC,OAHX;AAIM,QAAA,IAAI,EAAC,MAJX;AAKM,QAAA,KAAK,EAAEhB,WALb;AAMM,QAAA,WAAW,EAAC,oBANlB;AAOM,QAAA,GAAG,EAAIF,QAAQ,CAAC;AAACmB,UAAAA,QAAQ,EAAC;AAAV,SAAD,CAPrB;AAQM,QAAA,QAAQ,EAAEC;AARhB;AAAA;AAAA;AAAA;AAAA,cADA,eAWM;AAAA,mCAAIC,KAAK,CAACC,KAAV,iDAAI,aAAaC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXN,eAYI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CApDH;;GAAMzB,e;UAC4BD,O;;;KAD5BC,e;AAsDN,eAAeA,eAAf","sourcesContent":["import React,{useState} from 'react';\nimport {useForm} from 'react-hook-form';\n\nconst SearchInputForm = ({search})=>  {\n    const {register,handleSubmit}=useForm();\n    const [searchtitle,setSearchtitle] = useState('');\n    const [errors,setErrors] = useState({});\n\n    /*const inputChange = (event) => {\n      const title  = event.target.value;\n      setSearchtitle(title);\n      console.log(title);\n    }*/\n\n  /* const onSubmit = (data) => {  //\n    //event.preventDefault();\n  //  setErrors(validate(searchtitle));\n    setSearchtitle(data);\n    console.log(data)\n  }*/\n\n  const onFormSubmit = (event) => {  //\n   event.preventDefault();\n   setErrors(validate(searchtitle));\n   search(searchtitle);\n   console.log(searchtitle)\n }\n    const validate = (value) => {\n     const errors = {};\n     if (value.trim().length === 0) return 'Title is required!';\n    return errors;\n  }\n\n    return (\n      <div className='flex'>\n      <pre>{JSON.stringfy(searchtitle,undefined,2)}</pre>\n      <form className='search' onSubmit={handleSubmit(onSubmit)}>\n      <input\n            id='title'\n            //className={ this.state.error ? 'error' : '' }\n            name='title'\n            type='text'\n            value={searchtitle}\n            placeholder='Search Pictures...'\n            ref = {register({required:'Title is required'})}\n            onChange={inputChange}\n          />\n            <p>{error.title?.message} </p>\n          <button type='submit'>\n            <i className='search icon'></i>\n          </button>\n      </form>\n      </div>\n\n    )\n  }\n\nexport default SearchInputForm;\n"]},"metadata":{},"sourceType":"module"}