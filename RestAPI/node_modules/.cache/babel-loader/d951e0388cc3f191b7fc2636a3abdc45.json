{"ast":null,"code":"import apiClient from '../apiClient';\nimport { SEARCH_INPUT_CHANGE, SEARCH_REQUEST, SEARCH_SUCCESS, SEARCH_FAILURE } from './actionTypes';\nexport const searchInputChange = e => ({\n  type: 'SEARCH_INPUT_CHANGE',\n  title: e.target.value\n});\nexport const searchRequest = () => ({\n  type: 'SEARCH_REQUEST'\n});\nexport const searchSuccess = result => ({\n  type: 'SEARCH_SUCCESS',\n  result\n});\nexport const searchFailure = error => ({\n  type: 'SEARCH_FAILURE',\n  error\n});\nexport function search(title) {\n  return dispatch => {\n    dispatch(searchRequest());\n    apiClient.query(title).then(response => {\n      dispatch(searchSuccess(response.data));\n    }).catch(error => {\n      dispatch(searchFailure(error.response.data));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/Zelda/Redux/Pixabay/2112/src/actions/searchActions.js"],"names":["apiClient","SEARCH_INPUT_CHANGE","SEARCH_REQUEST","SEARCH_SUCCESS","SEARCH_FAILURE","searchInputChange","e","type","title","target","value","searchRequest","searchSuccess","result","searchFailure","error","search","dispatch","query","then","response","data","catch"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAAQC,mBAAR,EAA4BC,cAA5B,EAA2CC,cAA3C,EAA0DC,cAA1D,QAA+E,eAA/E;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,CAAD,KAAQ;AACvCC,EAAAA,IAAI,EAAE,qBADiC;AAEvCC,EAAAA,KAAK,EAACF,CAAC,CAACG,MAAF,CAASC;AAFwB,CAAR,CAA1B;AAKP,OAAO,MAAMC,aAAa,GAAG,OAAO;AAClCJ,EAAAA,IAAI,EAAE;AAD4B,CAAP,CAAtB;AAIP,OAAO,MAAMK,aAAa,GAAIC,MAAD,KAAa;AACxCN,EAAAA,IAAI,EAAE,gBADkC;AAChBM,EAAAA;AADgB,CAAb,CAAtB;AAIP,OAAO,MAAMC,aAAa,GAAIC,KAAD,KAAY;AACvCR,EAAAA,IAAI,EAAE,gBADiC;AACfQ,EAAAA;AADe,CAAZ,CAAtB;AAIP,OAAO,SAASC,MAAT,CAAgBR,KAAhB,EAAsB;AAC3B,SAAQS,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AAEAX,IAAAA,SAAS,CAACkB,KAAV,CAAgBV,KAAhB,EACGW,IADH,CACQC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAACL,aAAa,CAACQ,QAAQ,CAACC,IAAV,CAAd,CAAR;AACD,KAHH,EAIGC,KAJH,CAISP,KAAK,IAAI;AACdE,MAAAA,QAAQ,CAACH,aAAa,CAACC,KAAK,CAACK,QAAN,CAAeC,IAAhB,CAAd,CAAR;AACD,KANH;AAOD,GAVD;AAWD","sourcesContent":["import apiClient from '../apiClient';\nimport {SEARCH_INPUT_CHANGE,SEARCH_REQUEST,SEARCH_SUCCESS,SEARCH_FAILURE} from './actionTypes'\n\nexport const searchInputChange = (e) => ({\n  type: 'SEARCH_INPUT_CHANGE',\n  title:e.target.value\n});\n\nexport const searchRequest = () => ({\n  type: 'SEARCH_REQUEST'\n});\n\nexport const searchSuccess = (result) => ({\n  type: 'SEARCH_SUCCESS', result\n});\n\nexport const searchFailure = (error) => ({\n  type: 'SEARCH_FAILURE', error\n});\n\nexport function search(title){\n  return (dispatch) => {\n    dispatch(searchRequest());\n\n    apiClient.query(title)\n      .then(response => {\n        dispatch(searchSuccess(response.data))\n      })\n      .catch(error => {\n        dispatch(searchFailure(error.response.data))\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}