{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/Pixabay/2112/src/Pages/Picture.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactPaginate from \"react-paginate\";\nimport { useSelector } from 'react-redux';\n/*Pass search result object as pictures*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Picture(_ref) {\n  _s();\n\n  let {\n    pictures\n  } = _ref;\n  const [currentItems, setCurrentItems] = useState([]);\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const state = useSelector(state => state);\n  const itemPerPage = 10;\n  /*Pass search result pictures object be used as pictures.data.hits*/\n\n  useEffect(() => {\n    const endOffset = itemOffset + itemPerPage;\n    setCurrentItems(pictures.data.hits.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(pictures.data.total / itemPerPage));\n  }, [itemOffset, itemPerPage, pictures]);\n  /*Pass total picture number to be count as pictures.data.total*/\n\n  const handlePageClick = event => {\n    if (!state.loading) {\n      setLoading(true);\n      const newOffset = event.selected * itemPerPage % pictures.data.total;\n      setItemOffset(newOffset);\n      setLoading(false);\n    }\n  }; //const handleCollectionBtn=()=>{\n  //}\n\n\n  if (Object.keys(pictures.data).length && pictures.data.total) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pictures-container\",\n        children: currentItems.map(picture => {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            href: picture.previewURL,\n            className: \"picture\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image\",\n                src: picture.previewURL,\n                alt: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 16\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"collection\" //onClick={ this.handleCollectionBtn}\n                ,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 9\n            }, this)\n          }, picture.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 3,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        renderOnZeroPageCount: null,\n        containerClassName: \"pagination\",\n        pageLinkClassName: \"page-num\",\n        previousLinkClassName: \"page-num\",\n        nextLinkClassName: \"page-num\",\n        activeLinkClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Picture, \"YrymctJwvMYbef/6yWMLlcj8ZlA=\", false, function () {\n  return [useSelector];\n});\n\n_c = Picture;\n\nvar _c;\n\n$RefreshReg$(_c, \"Picture\");","map":{"version":3,"sources":["/Users/Zelda/Redux/Pixabay/2112/src/Pages/Picture.js"],"names":["React","useState","useEffect","ReactPaginate","useSelector","Picture","pictures","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","loading","setLoading","state","itemPerPage","endOffset","data","hits","slice","Math","ceil","total","handlePageClick","event","newOffset","selected","Object","keys","length","map","picture","previewURL","id"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport ReactPaginate from \"react-paginate\";\nimport { useSelector } from 'react-redux';\n/*Pass search result object as pictures*/\nexport default function Picture( {pictures} ) {\n  const [currentItems,setCurrentItems] = useState([]);\n  const [pageCount,setPageCount] = useState(0);\n  const [itemOffset,setItemOffset] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const state = useSelector((state)=>state);\n  const itemPerPage = 10;\n\n/*Pass search result pictures object be used as pictures.data.hits*/\n  useEffect(()=>{\n    const endOffset = itemOffset + itemPerPage;\n    setCurrentItems(pictures.data.hits.slice(itemOffset,endOffset));\n    setPageCount(Math.ceil(pictures.data.total / itemPerPage));\n  },[itemOffset,itemPerPage,pictures]);\n\n /*Pass total picture number to be count as pictures.data.total*/\n  const handlePageClick = (event)=>{\n    if (! state.loading){\n      setLoading(true);\n    const newOffset = (event.selected* itemPerPage)% pictures.data.total;\n    setItemOffset(newOffset);\n    setLoading(false)\n  }\n}\n\n//const handleCollectionBtn=()=>{\n\n//}\n\n\n\n if (Object.keys(pictures.data).length && pictures.data.total){\n  return(\n    <>\n   <div className=\"pictures-container\">\n    {currentItems.map(picture=>{\n      return(\n        <a key={picture.id} href={picture.previewURL} className=\"picture\">\n        <div className=\"image-wrapper\">\n          <img className=\"image\" src={picture.previewURL}\n          alt={<button>Add</button>} />\n          {\n                  <button\n                        className='collection'\n                        //onClick={ this.handleCollectionBtn}\n                      >Add</button>\n                }\n        </div>\n        </a>\n     )\n     })\n    }\n\n   </div>\n   <ReactPaginate\n    breakLabel=\"...\"\n    nextLabel=\"next >\"\n    onPageChange={handlePageClick}\n    pageRangeDisplayed={3}\n    pageCount={pageCount}\n    previousLabel=\"< previous\"\n    renderOnZeroPageCount={null}\n    containerClassName=\"pagination\"\n    pageLinkClassName='page-num'\n    previousLinkClassName=\"page-num\"\n    nextLinkClassName=\"page-num\"\n    activeLinkClassName=\"active\"\n    />\n    </>\n  )\n }\n}\n"]},"metadata":{},"sourceType":"module"}