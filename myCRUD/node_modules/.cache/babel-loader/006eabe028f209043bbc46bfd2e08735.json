{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/Treasured challenge/crud-redux/src/PostForm.js\";\n//import React, { Component } from 'react';\nimport React from 'react';\n/*class PostForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const title = this.getTitle.value;\n    const message =  this.getMessage.value;\n    const data = {\n      id: new Date(),\n      title,\n      message\n    }\n    this.props.dispatch({\n   type:'ADD_POST',\n   data});\n this.getTitle.value = '';\n this.getMessage.value = '';\n  //  console.log(data)\n}\n\nrender() {\nreturn (\n<div>\n  <h1>Create Post</h1>\n  <form onSubmit={this.handleSubmit}>\n  <input required type=\"text\" ref={(input)=>this.getTitle = input}\n   placeholder=\"Enter Post Title\"/> <br /><br />\n  <textarea required rows=\"5\" ref={(input)=>this.getMessage = input}cols=\"28\"\n   placeholder=\"Enter Post\" /><br /><br />\n   <button>Post</button>\n  </form>\n</div>\n);\n}\n}*/\n\nconst PostForm = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"Create Post\"), React.createElement(\"form\", {\n  onSubmit: props.handleSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  required: true,\n  type: \"text\",\n  ref: input => this.getTitle = input,\n  placeholder: \"Enter Post Title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), React.createElement(\"textarea\", {\n  required: true,\n  rows: \"5\",\n  ref: input => this.getMessage = input,\n  cols: \"28\",\n  placeholder: \"Enter Post\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"Post\")));\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/Zelda/Redux/Treasured challenge/crud-redux/src/PostForm.js"],"names":["React","PostForm","props","handleSubmit","input","getTitle","getMessage"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,MAAMC,QAAQ,GAAEC,KAAD,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAM,EAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAO,EAAA,QAAQ,MAAf;AAAgB,EAAA,IAAI,EAAC,MAArB;AAA4B,EAAA,GAAG,EAAGC,KAAD,IAAS,KAAKC,QAAL,GAAgBD,KAA1D;AACA,EAAA,WAAW,EAAC,kBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,OAEkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFlC,EAEwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFxC,EAGC;AAAU,EAAA,QAAQ,MAAlB;AAAmB,EAAA,IAAI,EAAC,GAAxB;AAA4B,EAAA,GAAG,EAAGA,KAAD,IAAS,KAAKE,UAAL,GAAkBF,KAA5D;AAAkE,EAAA,IAAI,EAAC,IAAvE;AACA,EAAA,WAAW,EAAC,YADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHD,EAI4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJ5B,EAIkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJlC,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALD,CAFF,CADF;;AAYA,eAAeH,QAAf","sourcesContent":["//import React, { Component } from 'react';\nimport React from 'react';\n\n/*class PostForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const title = this.getTitle.value;\n    const message =  this.getMessage.value;\n    const data = {\n      id: new Date(),\n      title,\n      message\n    }\n    this.props.dispatch({\n   type:'ADD_POST',\n   data});\n this.getTitle.value = '';\n this.getMessage.value = '';\n  //  console.log(data)\n}\n\nrender() {\nreturn (\n<div>\n  <h1>Create Post</h1>\n  <form onSubmit={this.handleSubmit}>\n  <input required type=\"text\" ref={(input)=>this.getTitle = input}\n   placeholder=\"Enter Post Title\"/> <br /><br />\n  <textarea required rows=\"5\" ref={(input)=>this.getMessage = input}cols=\"28\"\n   placeholder=\"Enter Post\" /><br /><br />\n   <button>Post</button>\n  </form>\n</div>\n);\n}\n}*/\n\nconst PostForm=(props)=>(\n  <div>\n    <h1>Create Post</h1>\n    <form onSubmit={props.handleSubmit}>\n     <input required type=\"text\" ref={(input)=>this.getTitle = input}\n     placeholder=\"Enter Post Title\"/> <br /><br />\n     <textarea required rows=\"5\" ref={(input)=>this.getMessage = input}cols=\"28\"\n     placeholder=\"Enter Post\" /><br /><br />\n     <button>Post</button>\n    </form>\n  </div>\n)\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}