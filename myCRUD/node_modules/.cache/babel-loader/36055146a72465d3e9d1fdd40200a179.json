{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/myCRUD/src/containers/UpdateContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Update from '../components/Update';\nimport { update } from '../actions';\nimport { bindActionCreators } from 'redux';\n\nclass UpdateContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: this.props.skill.title,\n      message: this.props.skill.message\n    };\n\n    this.handleEdit = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleUpdate = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            newTitle = _this$state.newTitle,\n            newMessage = _this$state.newMessage;\n      const data = {\n        id: this.props.skill.id,\n        newTitle,\n        newMessage\n      };\n      this.props.update(data);\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          title = _this$state2.title,\n          message = _this$state2.message;\n    return React.createElement(\"div\", {\n      key: this.props.skill.id,\n      className: \"skill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Update, {\n      title: title,\n      message: message,\n      handleClick: this.handleUpdate,\n      handleChange: this.handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    update: update\n  }, dispatch);\n};\n\nexport default connect(mapDispatchToProps)(UpdateContainer);","map":{"version":3,"sources":["/Users/Zelda/Redux/myCRUD/src/containers/UpdateContainer.js"],"names":["React","Component","connect","Update","update","bindActionCreators","UpdateContainer","state","title","props","skill","message","handleEdit","event","target","name","value","setState","handleUpdate","e","preventDefault","newTitle","newMessage","data","id","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCM,KAFsC,GAE9B;AACPC,MAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBF,KADlB;AAEPG,MAAAA,OAAO,EAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiBC;AAFpB,KAF8B;;AAAA,SAOtCC,UAPsC,GAOzBC,KAAK,IAAI;AAAA,4BACKA,KAAK,CAACC,MADX;AAAA,YACXC,IADW,iBACXA,IADW;AAAA,YACLC,KADK,iBACLA,KADK;AAEnB,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC;AAAV,OAAd;AACD,KAVoC;;AAAA,SAYtCE,YAZsC,GAYtBC,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AADqB,0BAEW,KAAKb,KAFhB;AAAA,YAEbc,QAFa,eAEbA,QAFa;AAAA,YAEJC,UAFI,eAEJA,UAFI;AAIpB,YAAMC,IAAI,GAAG;AACbC,QAAAA,EAAE,EAAE,KAAKf,KAAL,CAAWC,KAAX,CAAiBc,EADR;AAEbH,QAAAA,QAFa;AAGbC,QAAAA;AAHa,OAAb;AAKF,WAAKb,KAAL,CAAWL,MAAX,CAAkBmB,IAAlB;AACA,KAtBsC;AAAA;;AAwBxCE,EAAAA,MAAM,GAAG;AAAA,yBACkB,KAAKlB,KADvB;AAAA,UACDC,KADC,gBACDA,KADC;AAAA,UACMG,OADN,gBACMA,OADN;AAET,WACA;AAAK,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,KAAX,CAAiBc,EAA3B;AAA+B,MAAA,SAAS,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACA,MAAA,KAAK,EAAEhB,KADP;AAEA,MAAA,OAAO,EAAEG,OAFT;AAIE,MAAA,WAAW,EAAE,KAAKO,YAJpB;AAKE,MAAA,YAAY,EAAE,KAAKN,UALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA;AASG;;AAnCqC;;AAsCxC,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAOtB,kBAAkB,CAAC;AACxBD,IAAAA,MAAM,EAACA;AADiB,GAAD,EAEvBuB,QAFuB,CAAzB;AAGD,CAJD;;AAKA,eAAezB,OAAO,CAACwB,kBAAD,CAAP,CAA4BpB,eAA5B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Update from '../components/Update';\nimport { update } from '../actions';\nimport { bindActionCreators } from 'redux';\nclass UpdateContainer extends Component {\n\n  state = {\n   title : this.props.skill.title,\n   message : this.props.skill.message\n  }\n\n  handleEdit = event => {\n     const { name, value } = event.target\n     this.setState({ [name]: value })\n   }\n\n  handleUpdate = (e) => {\n   e.preventDefault();\n   const { newTitle,newMessage } = this.state\n\n    const data = {\n    id: this.props.skill.id,\n    newTitle,\n    newMessage\n   }\n  this.props.update(data);\n }\n\nrender() {\nconst { title, message } = this.state\nreturn (\n<div key={this.props.skill.id} className=\"skill\" >\n<Update\ntitle={title}\nmessage={message}\n\n  handleClick={this.handleUpdate}\n  handleChange={this.handleEdit} />\n</div>\n) }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    update:update\n  },dispatch);\n}\nexport default connect(mapDispatchToProps)(UpdateContainer);\n"]},"metadata":{},"sourceType":"module"}