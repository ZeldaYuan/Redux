{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/myCRUD/src/containers/UpdateContainer.js\";\nimport React, { Component } from 'react';\nimport { update } from '../actions';\nimport { connect } from 'react-redux';\nimport Update from '../components/Update';\n\nclass UpdateContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: this.props.skill.title,\n      message: this.props.skill.message\n    };\n\n    this.handleEdit = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleUpdate = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            newTitle = _this$state.newTitle,\n            newMessage = _this$state.newMessage;\n      const data = {\n        id: this.props.skill.id,\n        newTitle,\n        newMessage\n      };\n      this.props.update(data);\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          title = _this$state2.title,\n          message = _this$state2.message;\n    return React.createElement(\"div\", {\n      className: \"skill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Update, {\n      title: title,\n      message: message,\n      handleSubmit: this.handleUpdate,\n      handleChange: this.handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  handleSubmit: () => dispatch(update(data))\n});\n\nexport default connect(mapDispatchToProps)(UpdateContainer);","map":{"version":3,"sources":["/Users/Zelda/Redux/myCRUD/src/containers/UpdateContainer.js"],"names":["React","Component","update","connect","Update","UpdateContainer","state","title","props","skill","message","handleEdit","event","target","name","value","setState","handleUpdate","e","preventDefault","newTitle","newMessage","data","id","render","mapDispatchToProps","dispatch","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCK,KAFsC,GAE9B;AACPC,MAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBF,KADlB;AAEPG,MAAAA,OAAO,EAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiBC;AAFpB,KAF8B;;AAAA,SAOtCC,UAPsC,GAOzBC,KAAK,IAAI;AAAA,4BACKA,KAAK,CAACC,MADX;AAAA,YACXC,IADW,iBACXA,IADW;AAAA,YACLC,KADK,iBACLA,KADK;AAEnB,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC;AAAV,OAAd;AACD,KAVoC;;AAAA,SAYxCE,YAZwC,GAYzBC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AADkB,0BAEe,KAAKb,KAFpB;AAAA,YAEVc,QAFU,eAEVA,QAFU;AAAA,YAEAC,UAFA,eAEAA,UAFA;AAGjB,YAAMC,IAAI,GAAG;AACbC,QAAAA,EAAE,EAAE,KAAKf,KAAL,CAAWC,KAAX,CAAiBc,EADR;AAEbH,QAAAA,QAFa;AAGbC,QAAAA;AAHa,OAAb;AAKD,WAAKb,KAAL,CAAWN,MAAX,CAAkBoB,IAAlB;AACA,KArBqC;AAAA;;AAuBxCE,EAAAA,MAAM,GAAG;AAAA,yBACkB,KAAKlB,KADvB;AAAA,UACDC,KADC,gBACDA,KADC;AAAA,UACMG,OADN,gBACMA,OADN;AAET,WACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,OAAO,EAAEG,OAFX;AAIG,MAAA,YAAY,EAAE,KAAKO,YAJtB;AAKG,MAAA,YAAY,EAAE,KAAKN,UALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA;AASG;;AAlCqC;;AAqCxC,MAAMc,kBAAkB,GAAIC,QAAD,KAAc;AACvCC,EAAAA,YAAY,EAAC,MAAMD,QAAQ,CAACxB,MAAM,CAACoB,IAAD,CAAP;AADY,CAAd,CAA3B;;AAKA,eAAenB,OAAO,CAACsB,kBAAD,CAAP,CAA4BpB,eAA5B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { update } from '../actions';\nimport { connect } from 'react-redux';\nimport Update from '../components/Update';\n\nclass UpdateContainer extends Component {\n\n  state = {\n   title : this.props.skill.title,\n   message : this.props.skill.message\n  }\n\n  handleEdit = event => {\n     const { name, value } = event.target\n     this.setState({ [name]: value })\n   }\n\nhandleUpdate= (e) => {\n   e.preventDefault();\n   const { newTitle, newMessage } = this.state\n    const data = {\n    id: this.props.skill.id,\n    newTitle,\n    newMessage\n   }\n   this.props.update(data)\n  }\n\nrender() {\nconst { title, message } = this.state\nreturn (\n<div className=\"skill\" >\n<Update\n  title={title}\n  message={message}\n\n   handleSubmit={this.handleUpdate}\n   handleChange={this.handleEdit} />\n</div>\n) }\n}\n\nconst mapDispatchToProps = (dispatch) =>({\n  handleSubmit:()=>  dispatch(update(data)),\n\n})\n\nexport default connect(mapDispatchToProps)(UpdateContainer);\n"]},"metadata":{},"sourceType":"module"}