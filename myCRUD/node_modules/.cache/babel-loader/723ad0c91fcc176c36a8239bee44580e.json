{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/myCRUD/src/containers/UpdateContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Update from '../components/Update';\nimport { update } from '../actions';\nimport { bindActionCreators } from 'redux';\n\nclass UpdateContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEdit = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleUpdate = e => {\n      e.preventDefault();\n      const newTitle = this.state.title;\n      const newMessage = this.state.message;\n      const data = {\n        newTitle,\n        newMessage\n      };\n      this.props.dispatch({\n        type: 'UPDATE',\n        id: this.props.skill.id,\n        data: data\n      });\n    };\n\n    this.state = {\n      title: this.props.skill.title,\n      //Give select id skill title in the beginning\n      message: this.props.skill.message\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          message = _this$state.message;\n    return React.createElement(\"div\", {\n      className: \"skill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Update, {\n      title: title,\n      message: message,\n      handleClick: this.handleUpdate,\n      handleChange: this.handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect()(UpdateContainer);","map":{"version":3,"sources":["/Users/Zelda/Redux/myCRUD/src/containers/UpdateContainer.js"],"names":["React","Component","connect","Update","update","bindActionCreators","UpdateContainer","constructor","props","handleEdit","event","target","name","value","setState","handleUpdate","e","preventDefault","newTitle","state","title","newMessage","message","data","dispatch","type","id","skill","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAEtCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;;AADmB,SAOnBC,UAPmB,GAONC,KAAK,IAAI;AAAA,4BACKA,KAAK,CAACC,MADX;AAAA,YACXC,IADW,iBACXA,IADW;AAAA,YACLC,KADK,iBACLA,KADK;AAEnB,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC;AAAV,OAAd;AACD,KAViB;;AAAA,SAYnBE,YAZmB,GAYHC,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAA5B;AACA,YAAMC,UAAU,GAAG,KAAKF,KAAL,CAAWG,OAA9B;AACC,YAAMC,IAAI,GAAG;AACbL,QAAAA,QADa;AAEbG,QAAAA;AAFa,OAAb;AAIF,WAAKb,KAAL,CAAWgB,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,EAAE,EAAE,KAAKlB,KAAL,CAAWmB,KAAX,CAAiBD,EAAvC;AAA2CH,QAAAA,IAAI,EAAEA;AAAjD,OAApB;AACC,KArBkB;;AAEnB,SAAKJ,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAG,KAAKZ,KAAL,CAAWmB,KAAX,CAAiBP,KADd;AACsB;AACjCE,MAAAA,OAAO,EAAG,KAAKd,KAAL,CAAWmB,KAAX,CAAiBL;AAFhB,KAAb;AAIC;;AAiBHM,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKT,KADvB;AAAA,UACDC,KADC,eACDA,KADC;AAAA,UACME,OADN,eACMA,OADN;AAET,WACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACC,MAAA,KAAK,EAAEF,KADR;AAEC,MAAA,OAAO,EAAEE,OAFV;AAGC,MAAA,WAAW,EAAE,KAAKP,YAHnB;AAIC,MAAA,YAAY,EAAE,KAAKN,UAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA;AAQG;;AAnCqC;;AAsCxC,eAAeP,OAAO,GAAGI,eAAH,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Update from '../components/Update';\nimport { update } from '../actions';\nimport { bindActionCreators } from 'redux';\nclass UpdateContainer extends Component {\n\n  constructor(props) {\n  super(props)\n  this.state = {\n    title : this.props.skill.title,  //Give select id skill title in the beginning\n    message : this.props.skill.message\n     }\n  }\n  handleEdit = event => {\n     const { name, value } = event.target\n     this.setState({ [name]: value })\n   }\n\n  handleUpdate = (e) => {\n   e.preventDefault();\n   const newTitle = this.state.title;\n   const newMessage = this.state.message;\n    const data = {\n    newTitle,\n    newMessage\n   }\n  this.props.dispatch({ type: 'UPDATE', id: this.props.skill.id, data: data })\n  }\n\nrender() {\nconst { title, message } = this.state\nreturn (\n<div className=\"skill\" >\n<Update\n title={title}\n message={message}\n handleClick={this.handleUpdate}\n handleChange={this.handleEdit} />\n</div>\n) }\n}\n\nexport default connect()(UpdateContainer);\n"]},"metadata":{},"sourceType":"module"}