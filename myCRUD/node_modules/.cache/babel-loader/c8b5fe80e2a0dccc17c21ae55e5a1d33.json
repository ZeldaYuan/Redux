{"ast":null,"code":"var _jsxFileName = \"/Users/Zelda/Redux/myCRUD/src/containers/UpdateContainer.js\";\nimport React, { Component } from 'react';\nimport { update } from '../actions';\nimport { connect } from 'react-redux';\nimport Update from '../components/Update';\n\nclass UpdateContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: this.props.skill.title,\n      message: this.props.skill.message\n    };\n\n    this.handleEdit = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          message = _this$state.message;\n    return React.createElement(\"div\", {\n      className: \"skill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Update, {\n      title: title,\n      message: message,\n      handleChange: this.handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onSubmit: event => dispatch((_, getState) => {\n    // <-- dispatch a thunk\n    event.preventDefault();\n    const _this$state2 = this.state,\n          newTitle = _this$state2.newTitle,\n          newMessage = _this$state2.newMessage;\n    const data = {\n      id: this.props.skill.id,\n      newTitle,\n      newMessage\n    };\n    dispatch(update(data));\n  })\n});\n\nexport default connect(mapDispatchToProps)(UpdateContainer);","map":{"version":3,"sources":["/Users/Zelda/Redux/myCRUD/src/containers/UpdateContainer.js"],"names":["React","Component","update","connect","Update","UpdateContainer","state","title","props","skill","message","handleEdit","event","target","name","value","setState","render","mapDispatchToProps","dispatch","ownProps","onSubmit","_","getState","preventDefault","newTitle","newMessage","data","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCK,KAFsC,GAE9B;AACPC,MAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBF,KADlB;AAEPG,MAAAA,OAAO,EAAG,KAAKF,KAAL,CAAWC,KAAX,CAAiBC;AAFpB,KAF8B;;AAAA,SAOtCC,UAPsC,GAOzBC,KAAK,IAAI;AAAA,4BACKA,KAAK,CAACC,MADX;AAAA,YACXC,IADW,iBACXA,IADW;AAAA,YACLC,KADK,iBACLA,KADK;AAEnB,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC;AAAV,OAAd;AACD,KAVoC;AAAA;;AAcxCE,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKX,KADvB;AAAA,UACDC,KADC,eACDA,KADC;AAAA,UACMG,OADN,eACMA,OADN;AAET,WACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,OAAO,EAAEG,OAFX;AAKG,MAAA,YAAY,EAAE,KAAKC,UALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA;AASG;;AAzBqC;;AA4BxC,MAAMO,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,MAAyB;AAClDC,EAAAA,QAAQ,EAAGT,KAAD,IAAWO,QAAQ,CAAC,CAACG,CAAD,EAAIC,QAAJ,KAAiB;AAAE;AAC/CX,IAAAA,KAAK,CAACY,cAAN;AAD6C,yBAEZ,KAAKlB,KAFO;AAAA,UAErCmB,QAFqC,gBAErCA,QAFqC;AAAA,UAE3BC,UAF2B,gBAE3BA,UAF2B;AAG5C,UAAMC,IAAI,GAAG;AACbC,MAAAA,EAAE,EAAE,KAAKpB,KAAL,CAAWC,KAAX,CAAiBmB,EADR;AAEbH,MAAAA,QAFa;AAGbC,MAAAA;AAHa,KAAb;AAKDP,IAAAA,QAAQ,CAACjB,MAAM,CAACyB,IAAD,CAAP,CAAR;AACD,GAT4B;AADqB,CAAzB,CAA3B;;AAcA,eAAexB,OAAO,CAACe,kBAAD,CAAP,CAA4Bb,eAA5B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { update } from '../actions';\nimport { connect } from 'react-redux';\nimport Update from '../components/Update';\n\nclass UpdateContainer extends Component {\n\n  state = {\n   title : this.props.skill.title,\n   message : this.props.skill.message\n  }\n\n  handleEdit = event => {\n     const { name, value } = event.target\n     this.setState({ [name]: value })\n   }\n\n\n\nrender() {\nconst { title, message } = this.state\nreturn (\n<div className=\"skill\" >\n<Update\n  title={title}\n  message={message}\n\n\n   handleChange={this.handleEdit} />\n</div>\n) }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onSubmit: (event) => dispatch((_, getState) => { // <-- dispatch a thunk\n    event.preventDefault()\n    const { newTitle, newMessage } = this.state\n     const data = {\n     id: this.props.skill.id,\n     newTitle,\n     newMessage\n    }\n    dispatch(update(data))\n  }\n)\n})\n\nexport default connect(mapDispatchToProps)(UpdateContainer);\n"]},"metadata":{},"sourceType":"module"}