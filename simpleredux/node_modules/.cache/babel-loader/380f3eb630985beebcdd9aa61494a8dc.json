{"ast":null,"code":"import _classCallCheck from \"/Users/Zelda/ReactNative/Redux/simpleredux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Zelda/ReactNative/Redux/simpleredux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Zelda/ReactNative/Redux/simpleredux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Zelda/ReactNative/Redux/simpleredux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Zelda/ReactNative/Redux/simpleredux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Zelda/ReactNative/Redux/simpleredux/src/App.js\";\nimport React, { Component } from 'react';\nimport HelloWorld from \"./HelloWorld\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { store } from \"./store\"; //import reducer from \"./reducers\";\n//import { createStore } from \"redux\";\n//const initialState = { tech: \"React \" };\n//const store = createStore(reducer, initialState);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // the state object has been removed.   \n    value: function render() {\n      return [React.createElement(HelloWorld, {\n        key: 1,\n        tech: store.getState().tech,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(ButtonGroup, {\n        key: 2,\n        technologies: [\"React\", \"Elm\", \"React-Redux\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })];\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Zelda/ReactNative/Redux/simpleredux/src/App.js"],"names":["React","Component","HelloWorld","ButtonGroup","store","App","getState","tech"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,SAAtB,C,CACA;AACA;AAEA;AACA;;IAEMC,G;;;;;;;;;;;;;AACN;6BACS;AACL,aAAO,CACL,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAE,CAAjB;AAAoB,QAAA,IAAI,EAAED,KAAK,CAACE,QAAN,GAAiBC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAEL,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAE,CAAlB;AAAqB,QAAA,YAAY,EAAE,CAAC,OAAD,EAAU,KAAV,EAAiB,aAAjB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFK,CAAP;AAID;;;;EAPeN,S;;AASlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport HelloWorld from \"./HelloWorld\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport { store } from \"./store\";\n//import reducer from \"./reducers\";\n//import { createStore } from \"redux\";\n\n//const initialState = { tech: \"React \" };\n//const store = createStore(reducer, initialState);\n\nclass App extends Component {\n// the state object has been removed.   \nrender() {\n    return [\n      <HelloWorld key={1} tech={store.getState().tech}/>,\n      <ButtonGroup key={2} technologies={[\"React\", \"Elm\", \"React-Redux\"]} />\n    ];\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}